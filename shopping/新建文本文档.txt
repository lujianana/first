<template>
    <div v-show="lista.length">
        <div class="list-control">
            <div class="list-control-filter">
                  <span>品牌</span>
                   <span
                    class="list-control-filter-item"
                    :class="{on: item===filterBrand}"
                    v-for="item in brands"
                    @click="handleFilterBrand(item)">{{ item }}</span>
             </div>
           <div class="list-control-filter">
                <span>颜色：</span>
                <span
                    class="list-control-filter-item"
                    :class="{item===filterColor}"
                    v-for="item in colors"
                    @click="handleFilterColor(item)">{{ item }}</span>
            </div>
             <div class="list-control-order">
                <span>排序：</span>
                <span
                    class="list-control-order-item"
                    :class="{on: order === ''}"
                    @click="handleOrderDefault">默认</span>
                <span
                    class="list-control-order-item"
                    :class="{on: order === 'sales'}"
                    @click="handleOrderSales">
                    销量
                    <template v-if="order === 'sales'">↓</template>
                </span>
                <span
                    class="list-control-order-item"
                    :class="{on: order.indexOf('cost') > -1}"
                    @click="handleOrderCost">
                    价格
                    <template v-if="order === 'cost-asc'">↑</template>
                    <template v-if="order === 'cost-desc'">↓</template>
                </span>
            </div>
        </div>
             
          <product v-for="item in list" :info="item" :key="item.id"></product>
              <div class="product-not-found" v-show="filterAndOrderedList.length===0">无商品可以显示</div> 
 </div>
</template>
         <import product from  '.../components/product.vue ' >
  export default()
  {
     components:product,
     methods:
{ 
 filteredAndOrderedList()
{
   if()



}  


   },
     computed:
{ 

     list()
     {
        return this.$store.state.productList;
  

    } 


 },
     data:(){},
     mounted:
{
  this.$store.dispatch('getProductList');
   
}
    
  
   }   